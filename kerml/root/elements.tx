/* Elements */
Model:
    ( elements*=Element | relationships+=Relationship)
;

Element:
    'element' ('<' humanId=Name '>')? ( name=Name )?
    (';' | '{'
        ownedRelationship += OwnedRelationship
    '}')
;

/* Relationships */
Relationship:
    'relationship' ('<' humanId=Name '>')? ( name=Name )?
        ('from' source+=[Element|QualifiedName][','])?
        ('to' target+=[Element|QualifiedName][','])?
    (';' | '{' ownedRelatedElement+=RelationshipOwnedElement '}')
;

OwnedRelationship:
    'relationship' ('<' humanId=Name '>')? ('to' target+=[Element|QualifiedName][','])?
    (';' | '{'
        ownedRelatedElement+=RelationshipOwnedElement
    '}')
;

RelationshipOwnedElement:
      Element | Relationship
;


/* =============================================================== */
/* COMMENTS */
Comment:
    Note | RegularComment | DocumentationComment
;

Note:
    NoteBlock | NoteLine
;

NoteBlock:
    /\/\/\*(.|\n)*?\*\//
;

NoteLine:
    /\/\/.*$/
;

RegularComment:
    commentText=/(?ms)\/\*(.*?)\*\//
    ;

DocumentationComment:
    commentText=/(?ms)\/\*\*(.*?)\*\//
    ;

/* QualifiedNames */
Qualification
    : Name('::')+
    ;

QualifiedName
    : Qualification? Name
    ;

/* NAMES */
Name:
    !Keyword (BASIC_NAME | '\'' UNRESTRICTED_NAME '\'')
;

BASIC_NAME:
    /([a-zA-Z]|'_')([\w|\d]*)/
    ;

UNRESTRICTED_NAME:
    /((?!['"])([ -~])|(\\(b|t|n|f|r)))*/
    ;

DECIMAL_DIGIT:
    /\'[0-9]\'/
;

/* TERMINALS */
DECIMAL_VALUE
    : /'0'..'9' ('0'..'9')*/
    ;

EXP_VALUE
    : DECIMAL_VALUE ('e' | 'E') ('+' | '-')? DECIMAL_VALUE
	;

STRING_VALUE
    : /'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"'/
    ;

Keyword:
    'element' | 'relationship' | 'from' | 'to'
;

//Keyword:
//    'about' | 'abstract' | 'alias' | 'all' | 'and' | 'as' | 'assign' | 'assoc' | 'behavior' | 'binding' | 'bool' | 'by' | 'class'
//    | 'classifier' | 'comment' | 'composite' | 'conjugate' | 'conjugates' | 'conjugation' | 'connector'
//    | 'datatype' | 'default' | 'disjoining' | 'disjoint' | 'doc' | 'element' | 'else' | 'end' | 'expr' | 'false'
//    | 'feature' | 'featured' | 'featuring' | 'filter' | 'first' | 'flow' | 'for' | 'from' | 'function' | 'generalization'
//    | 'hastype' | 'id' | 'if' | 'implies' | 'import' | 'in' | 'inout' | 'interaction' | 'inv' | 'is' | 'istype' | 'language'
//    | 'member' | 'metadata' | 'multiplicity' | 'namespace' | 'nonunique' | 'not' | 'null' | 'of' | 'or' | 'ordered' | 'out'
//    | 'package' | 'portion' | 'predicate' | 'private' | 'protected' | 'public' | 'redefines' | 'redefinition'
//    | 'relationship' | 'rep' | 'return' | 'specialization' | 'specializes' | 'step' | 'stream' | 'struct'
//    | 'subclassifier' | 'subset' | 'subsets' | 'subtype' | 'succession' | 'then' | 'to' | 'true' | 'type' | 'typed'
//    ;